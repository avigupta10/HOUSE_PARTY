{"version":3,"sources":["components/roomjoinpage.js","components/createroompage.js","components/musicplayer.js","components/room.js","components/homepage.js","App.js","reportWebVitals.js","index.js"],"names":["RoomJoinPage","props","useState","code","setCode","error","setError","Grid","container","spacing","item","xs","align","Typography","variant","component","TextField","label","placeholder","value","helperText","onChange","e","target","Button","color","onClick","options","method","headers","body","JSON","stringify","fetch","then","response","ok","history","push","catch","console","to","Link","CreateRoomPage","guest_can_pause","setPause","votes_to_skip","setVotes","errorMsg","successMsg","setSuccess","RoomButtonClicked","json","data","UpdateButtonClick","updateCallback","Collapse","in","Alert","severity","onClose","update","FormControl","FormHelperText","RadioGroup","row","defaultValue","toString","FormControlLabel","control","Radio","labelPlacement","required","type","inputProps","min","style","textAlign","defaultProps","MusicPlayer","songProgress","time","duration","log","Card","src","image_url","height","width","song_title","artist","IconButton","is_playing","votes","votes_required","LinearProgress","Room","is_host","setHost","showSettings","setSettings","setSpotifyAuthenticated","song","setSong","match","params","useEffect","interval","setInterval","getCurrentSong","clearInterval","getRoomDetails","leaveRoomCallback","authenticateSpotify","status","window","location","replace","url","settingsButtonClicked","name","username","title","startIcon","Tune","resp","Homepage","room_code","codeSet","clearRoomCode","exact","path","render","ButtonGroup","disableElevation","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4fd44c6.chunk.js","sourcesContent":["import {Button, Grid, TextField, Typography} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport {useState} from \"react\";\r\n\r\nfunction RoomJoinPage(props) {\r\n    const [code, setCode] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const codeOnChange = (e) => {\r\n        setCode(e.target.value)\r\n    }\r\n\r\n    const roomButtonClicked = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                code: code\r\n            })\r\n        }\r\n        fetch('/api/join-room', options).then((response) => {\r\n            if (response.ok) {\r\n                props.history.push(`/room/${code}`)\r\n            } else {\r\n                setError('Room Not Found')\r\n            }\r\n        }).catch((error) => console.error(error))\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Typography variant='h4' component='h4'>\r\n                    Join a Room\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <TextField error={error} label='Code' placeholder='Enter a RoomCode' value={code} helperText={error}\r\n                           variant='outlined' onChange={codeOnChange}/>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button variant='contained' color='primary' onClick={roomButtonClicked}>Enter Room</Button>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button variant='contained' color='secondary' to='/' component={Link}>Back</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RoomJoinPage;","import Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useState} from 'react'\r\nimport {Collapse} from \"@material-ui/core\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\n\r\nfunction CreateRoomPage(props) {\r\n    const [guest_can_pause, setPause] = useState(props.guest_can_pause)\r\n    const [votes_to_skip, setVotes] = useState(props.votes_to_skip)\r\n    const [errorMsg, setError] = useState('')\r\n    const [successMsg, setSuccess] = useState('')\r\n\r\n    const VotesOnChange = (e) => {\r\n        setVotes(e.target.value)\r\n    }\r\n\r\n    const PauseOnChange = (e) => {\r\n        setPause(e.target.value === 'true')\r\n    }\r\n\r\n    const RoomButtonClicked = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                votes_to_skip: votes_to_skip,\r\n                guest_can_pause: guest_can_pause\r\n            })\r\n        }\r\n        fetch('/api/create-room', options)\r\n            .then((response) => response.json())\r\n            .then((data) => props.history.push('/room/' + data.code));\r\n    }\r\n\r\n    const UpdateButtonClick = () => {\r\n        const options = {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                votes_to_skip: votes_to_skip,\r\n                guest_can_pause: guest_can_pause,\r\n                code: props.code\r\n            })\r\n        }\r\n        fetch('/api/settings-room', options)\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    setSuccess('Room Updated Successfully')\r\n                } else {\r\n                    setError('Error Updating Room')\r\n                }\r\n                props.updateCallback();\r\n            })\r\n\r\n    }\r\n\r\n    function renderCreateButtons() {\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button color=\"primary\" variant=\"contained\" onClick={RoomButtonClicked}>Create A Room</Button>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button color=\"secondary\" variant=\"contained\" to='/' component={Link}>Back</Button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    function renderUpdateButtons() {\r\n        return (\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button color=\"primary\" variant=\"contained\" onClick={UpdateButtonClick}>Update Room</Button>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Collapse in={errorMsg !== '' || successMsg !== ''}>\r\n                    {successMsg !== '' ? (<Alert severity='success' onClose={() => {\r\n                        setSuccess('')\r\n                    }}>{successMsg}</Alert>) : (<Alert severity='danger' onClose={() => {\r\n                        setError('')\r\n                    }}>{errorMsg}</Alert>)}\r\n                </Collapse>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Typography component='h4' variant='h4'>\r\n                    {props.update ? \"Settings Room\" : \"Create a Room\"}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <FormControl component='fieldset'>\r\n                    <FormHelperText>\r\n                        <div align=\"center\">\r\n                            Guest Control of Playback State\r\n                        </div>\r\n                    </FormHelperText>\r\n                    <RadioGroup row defaultValue={props.guest_can_pause.toString()} onChange={PauseOnChange}>\r\n                        <FormControlLabel value='true' control={<Radio color='primary'/>} label='Play/Pause'\r\n                                          labelPlacement='bottom'/>\r\n                        <FormControlLabel value='false' control={<Radio color='secondary'/>} label='No Control'\r\n                                          labelPlacement='bottom'/>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <FormControl>\r\n                    <TextField required='true' type=\"number\" defaultValue={props.votes_to_skip} onChange={VotesOnChange}\r\n                               inputProps={{min: 1, style: {textAlign: 'center'}}}/>\r\n                    <FormHelperText>\r\n                        <div align=\"center\">\r\n                            Votes Required To Skip Song\r\n                        </div>\r\n                    </FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            {props.update ? renderUpdateButtons() : renderCreateButtons()}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nCreateRoomPage.defaultProps = {\r\n    votes_to_skip: 2,\r\n    guest_can_pause: true,\r\n    update: false,\r\n    code: null,\r\n    updateCallback: () => {\r\n    }\r\n}\r\n\r\nexport default CreateRoomPage;\r\n\r\n\r\n\r\n","import {Grid, Typography, Card, IconButton, LinearProgress} from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\n\r\nfunction MusicPlayer(props) {\r\n    const songProgress = (props.time / props.duration) * 100\r\n\r\n    const pauseSong = () => {\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n        }\r\n        fetch('/spotify/pause-song', options)\r\n    }\r\n\r\n    const playSong = () => {\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n        }\r\n        fetch('/spotify/play-song', options)\r\n    }\r\n\r\n    const skipSong = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n        }\r\n        fetch('/spotify/skip-song', options)\r\n    };\r\n    console.log(songProgress)\r\n    return (\r\n        <Card>\r\n            <Grid container spacing={1} align=\"center\">\r\n                <Grid item xs={4}>\r\n                    <img src={props.image_url} height='100%' width='100%' />\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Typography component='h5' variant='h5'>\r\n                        {props.song_title}\r\n                    </Typography>\r\n                    <Typography color='textSecondary' component='h5' variant='subtitle1'>\r\n                        {props.artist}\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton onClick={() => {props.is_playing ? pauseSong() : playSong()}}>\r\n                            {props.is_playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton onClick={() => skipSong()}>\r\n                            <SkipNextIcon />\r\n                        </IconButton>\r\n                        <Typography component='p' variant='p'>Votes required to skip: {props.votes} / {props.votes_required}</Typography>\r\n                    </div>\r\n                </Grid>\r\n        </Grid>\r\n            <LinearProgress variant='determinate' value={songProgress} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MusicPlayer;","import {useEffect, useState} from 'react';\r\nimport {Button, Grid, Typography} from '@material-ui/core';\r\nimport {Tune} from '@material-ui/icons';\r\nimport CreateRoomPage from \"./createroompage\";\r\nimport MusicPlayer from \"./musicplayer\";\r\n\r\nfunction Room(props) {\r\n    const [votes_to_skip, setVotes] = useState(2)\r\n    const [guest_can_pause, setPause] = useState(false)\r\n    const [is_host, setHost] = useState(false)\r\n    const [showSettings, setSettings] = useState(false)\r\n    const [spotifyAuthenticated, setSpotifyAuthenticated] = useState(false)\r\n    const [song, setSong] = useState({})\r\n\r\n    const code = props.match.params.code;\r\n\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(getCurrentSong, 1000); //ComponentDidMount and  calling the function to get data stored in the variable\r\n        return () => {                                            //ComponentWillUnmount\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    const getRoomDetails = () => {\r\n        fetch(\"/api/get-room\" + \"?code=\" + code)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    props.leaveRoomCallback();\r\n                    props.history.push('/');\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                setVotes(data.votes_to_skip);\r\n                setPause(data.guest_can_pause);\r\n                setHost(data.is_host);\r\n\r\n                if (is_host) {\r\n                    authenticateSpotify();\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    const authenticateSpotify = () => {\r\n        fetch('/spotify/is-authenticated')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n            setSpotifyAuthenticated(data.status);\r\n            console.log(data.status);\r\n            if (!data.status) {\r\n                fetch('/spotify/get-auth-url')\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                    window.location.replace(data.url); // Redirecting to spotify_callback()\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getCurrentSong = () => {\r\n        fetch('/spotify/current-song').then((response) => {\r\n            if (!response.ok) {\r\n                return {};\r\n            } else {\r\n                return response.json();\r\n            }\r\n        }).then((data) => {\r\n            setSong(data);\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    const leaveRoom = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n        };\r\n        fetch('/api/leave-room', options).then((resp) => {\r\n            props.leaveRoomCallback()\r\n            props.history.push('/')\r\n        });\r\n    }\r\n\r\n    function settingsPage() {\r\n        return (\r\n            <Grid container spacing={1} align=\"center\">\r\n                <Grid item xs={12}>\r\n                    <CreateRoomPage update={true} guest_can_pause={guest_can_pause} votes_to_skip={votes_to_skip}\r\n                                    code={code} updateCallback={getRoomDetails}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button color=\"secondary\" variant=\"contained\" aria-label=\"settings\" onClick={() => {\r\n                        settingsButtonClicked(false)\r\n                    }}>\r\n                        Close\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    function settingButton() {\r\n        return (\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button color='primary' variant='contained' aria-label=\"settings\" startIcon={<Tune/>} onClick={() => {\r\n                    settingsButtonClicked(true)\r\n                }}>\r\n                    Settings\r\n                </Button>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    const settingsButtonClicked = (value) => {\r\n        setSettings(value);\r\n    };\r\n\r\n    getRoomDetails(); // calling the function to get data stored in the variable\r\n\r\n    if (showSettings) {\r\n        return settingsPage()\r\n    }\r\n    return (\r\n        <Grid container spacing={1} align=\"center\">\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\" component='h4'>\r\n                    Code: {code}\r\n                </Typography>\r\n            </Grid>\r\n            <MusicPlayer time = {song.time} duration={song.duration} name = {song.username} votes={song.votes} votes_required={song.votes_required} song_title={song.title}\r\n                         is_playing={song.is_playing} image_url={song.image_url} artist={song.artist}/>\r\n            {is_host ? settingButton() : null}\r\n            <Grid item xs={12}>\r\n                <Button color='secondary' variant='contained' onClick={leaveRoom}>\r\n                    Leave Room\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Room;\r\n","import RoomJoinPage from './roomjoinpage';\r\nimport CreateRoomPage from './createroompage';\r\nimport Room from './room';\r\n\r\nimport {useEffect, useState} from \"react\";\r\nimport {BrowserRouter, Route, Switch, Redirect, Link} from \"react-router-dom\";\r\nimport {Grid, Button, ButtonGroup, Typography} from '@material-ui/core'\r\n\r\nfunction Homepage() {\r\n    const [room_code, codeSet] = useState(null)\r\n\r\n    useEffect( () => {\r\n        fetch('/api/user-in-room').then((response) => response.json()).then((data) => {\r\n            codeSet(data.code)\r\n        })\r\n    },[])\r\n\r\n    const clearRoomCode = () => {\r\n        codeSet(null)\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => {\r\n                    return room_code ? (<Redirect to={`/room/${room_code}`} /> ) : (renderHomePage());\r\n                }} />\r\n                <Route path=\"/join\" component={RoomJoinPage}/>\r\n                <Route path=\"/create\" component={CreateRoomPage}/>\r\n                <Route path=\"/room/:code\" render={(props) => {\r\n                    return <Room {...props} leaveRoomCallback={clearRoomCode}/>\r\n                }} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nfunction renderHomePage() {\r\n    return (\r\n        <Grid container spacing={3} align='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h3' component='h3'>\r\n                    House Party\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ButtonGroup disableElevation variant='contained' color='primary'>\r\n                    <Button color='primary' to='/join' component={Link}>\r\n                        Join a Room\r\n                    </Button>\r\n                    <Button color='secondary' to='/create' component={Link}>\r\n                        Create a Room\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import './App.css';\nimport HomePage from './components/homepage'\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <HomePage/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}