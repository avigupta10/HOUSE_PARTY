{"version":3,"sources":["components/roomjoinpage.js","components/createroompage.js","components/musicplayer.js","components/search.js","components/room.js","components/homepage.js","App.js","reportWebVitals.js","index.js"],"names":["RoomJoinPage","props","useState","code","setCode","name","setName","error","setError","Grid","container","spacing","item","xs","align","Typography","variant","component","TextField","label","placeholder","value","onChange","e","target","helperText","Button","color","onClick","options","method","headers","body","JSON","stringify","fetch","then","response","ok","history","push","console","log","json","setNameonChange","catch","to","Link","CreateRoomPage","guest_can_pause","setPause","votes_to_skip","setVotes","errorMsg","successMsg","setSuccess","RoomButtonClicked","data","UpdateButtonClick","updateCallback","Collapse","in","Alert","severity","onClose","update","FormControl","FormHelperText","RadioGroup","row","defaultValue","toString","FormControlLabel","control","Radio","labelPlacement","required","type","inputProps","min","style","textAlign","defaultProps","MusicPlayer","songProgress","time","duration","Card","src","image_url","height","width","song_title","artist","IconButton","is_playing","votes","votes_required","LinearProgress","Search","songs","setSongs","loading","setLoading","query","setQuery","handleSearch","getSearchDetails","a","Autocomplete","id","getOptionSelected","option","getOptionLabel","event","uri","uris","playSearchSong","renderInput","params","InputProps","endAdornment","CircularProgress","size","Room","is_host","setHost","showSettings","setSettings","setSpotifyAuthenticated","song","setSong","match","useEffect","interval","setInterval","getCurrentSong","clearInterval","getRoomDetails","leaveRoomCallback","authenticateSpotify","status","window","location","replace","url","settingsButtonClicked","username","guest_name","title","startIcon","Tune","resp","Homepage","room_code","codeSet","clearRoomCode","exact","path","render","ButtonGroup","disableElevation","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13e0aab6.chunk.js","sourcesContent":["import {Button, Grid, TextField, Typography} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport {useState} from \"react\";\r\n\r\nfunction RoomJoinPage(props) {\r\n    const [code, setCode] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const codeOnChange = (e) => {\r\n        setCode(e.target.value)\r\n    }\r\n\r\n    const nameOnChange = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const setNameonChange = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name: name\r\n            })\r\n        }\r\n        fetch('/spotify/set-name', options).then((response) => console.log(response.json()))\r\n    }\r\n\r\n    const roomButtonClicked = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                code: code\r\n            })\r\n        }\r\n        fetch('/api/join-room', options).then((response) => {\r\n            if (response.ok) {\r\n                props.history.push(`/room/${code}`)\r\n                setNameonChange()\r\n            } else {\r\n                setError('Room Not Found')\r\n            }\r\n        }).catch((error) => console.error(error))\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Typography variant='h4' component='h4'>\r\n                    Join a Room\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <TextField label='Name' placeholder='Enter Your Name' value={name}\r\n                           variant='outlined' onChange={nameOnChange}/>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <TextField error={error} label='Code' placeholder='Enter a RoomCode' value={code} helperText={error}\r\n                           variant='outlined' onChange={codeOnChange}/>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button variant='contained' color='primary' onClick={roomButtonClicked}>Enter Room</Button>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button variant='contained' color='secondary' to='/' component={Link}>Back</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default RoomJoinPage;","import Grid from \"@material-ui/core/Grid\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useState} from 'react'\r\nimport {Collapse} from \"@material-ui/core\";\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\n\r\nfunction CreateRoomPage(props) {\r\n    const [guest_can_pause, setPause] = useState(props.guest_can_pause)\r\n    const [votes_to_skip, setVotes] = useState(props.votes_to_skip)\r\n    const [errorMsg, setError] = useState('')\r\n    const [successMsg, setSuccess] = useState('')\r\n\r\n    const VotesOnChange = (e) => {\r\n        setVotes(e.target.value)\r\n    }\r\n\r\n    const PauseOnChange = (e) => {\r\n        setPause(e.target.value === 'true')\r\n    }\r\n\r\n    const RoomButtonClicked = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                votes_to_skip: votes_to_skip,\r\n                guest_can_pause: guest_can_pause\r\n            })\r\n        }\r\n        fetch('/api/create-room', options)\r\n            .then((response) => response.json())\r\n            .then((data) => props.history.push('/room/' + data.code));\r\n    }\r\n\r\n    const UpdateButtonClick = () => {\r\n        const options = {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                votes_to_skip: votes_to_skip,\r\n                guest_can_pause: guest_can_pause,\r\n                code: props.code\r\n            })\r\n        }\r\n        fetch('/api/settings-room', options)\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    setSuccess('Room Updated Successfully')\r\n                } else {\r\n                    setError('Error Updating Room')\r\n                }\r\n                props.updateCallback();\r\n            })\r\n\r\n    }\r\n\r\n    function renderCreateButtons() {\r\n        return (\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button color=\"primary\" variant=\"contained\" onClick={RoomButtonClicked}>Create A Room</Button>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                    <Button color=\"secondary\" variant=\"contained\" to='/' component={Link}>Back</Button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    function renderUpdateButtons() {\r\n        return (\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button color=\"primary\" variant=\"contained\" onClick={UpdateButtonClick}>Update Room</Button>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Collapse in={errorMsg !== '' || successMsg !== ''}>\r\n                    {successMsg !== '' ? (<Alert severity='success' onClose={() => {\r\n                        setSuccess('')\r\n                    }}>{successMsg}</Alert>) : (<Alert severity='danger' onClose={() => {\r\n                        setError('')\r\n                    }}>{errorMsg}</Alert>)}\r\n                </Collapse>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <Typography component='h4' variant='h4'>\r\n                    {props.update ? \"Settings Room\" : \"Create a Room\"}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <FormControl component='fieldset'>\r\n                    <FormHelperText>\r\n                        <div align=\"center\">\r\n                            Guest Control of Playback State\r\n                        </div>\r\n                    </FormHelperText>\r\n                    <RadioGroup row defaultValue={props.guest_can_pause.toString()} onChange={PauseOnChange}>\r\n                        <FormControlLabel value='true' control={<Radio color='primary'/>} label='Play/Pause'\r\n                                          labelPlacement='bottom'/>\r\n                        <FormControlLabel value='false' control={<Radio color='secondary'/>} label='No Control'\r\n                                          labelPlacement='bottom'/>\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} align=\"center\">\r\n                <FormControl>\r\n                    <TextField required='true' type=\"number\" defaultValue={props.votes_to_skip} onChange={VotesOnChange}\r\n                               inputProps={{min: 1, style: {textAlign: 'center'}}}/>\r\n                    <FormHelperText>\r\n                        <div align=\"center\">\r\n                            Votes Required To Skip Song\r\n                        </div>\r\n                    </FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            {props.update ? renderUpdateButtons() : renderCreateButtons()}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nCreateRoomPage.defaultProps = {\r\n    votes_to_skip: 2,\r\n    guest_can_pause: true,\r\n    update: false,\r\n    code: null,\r\n    updateCallback: () => {\r\n    }\r\n}\r\n\r\nexport default CreateRoomPage;\r\n\r\n\r\n\r\n","import {Grid, Typography, Card, IconButton, LinearProgress} from \"@material-ui/core\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\n\r\nfunction MusicPlayer(props) {\r\n    const songProgress = (props.time / props.duration) * 100\r\n\r\n    const pauseSong = () => {\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n        }\r\n        fetch('/spotify/pause-song', options)\r\n    }\r\n\r\n    const playSong = () => {\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n        }\r\n        fetch('/spotify/play-song', options)\r\n    }\r\n\r\n    const skipSong = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n        }\r\n        fetch('/spotify/skip-song', options)\r\n    };\r\n    console.log(songProgress)\r\n    return (\r\n        <Card>\r\n            <Grid container spacing={1} align=\"center\">\r\n                <Grid item xs={4}>\r\n                    <img src={props.image_url} height='100%' width='100%' />\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <Typography component='h5' variant='h5'>\r\n                        {props.song_title}\r\n                    </Typography>\r\n                    <Typography color='textSecondary' component='h5' variant='subtitle1'>\r\n                        {props.artist}\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton onClick={() => {props.is_playing ? pauseSong() : playSong()}}>\r\n                            {props.is_playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton onClick={() => skipSong()}>\r\n                            <SkipNextIcon />\r\n                        </IconButton>\r\n                        <Typography component='p' variant='p'>Votes required to skip: {props.votes} / {props.votes_required}</Typography>\r\n                    </div>\r\n                </Grid>\r\n        </Grid>\r\n            <LinearProgress variant='determinate' value={songProgress} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MusicPlayer;","import {Fragment, useState} from \"react\";\r\nimport {Autocomplete} from \"@material-ui/lab\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\n\r\nexport default function Search() {\r\n    const [songs, setSongs] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [query, setQuery] = useState('');\r\n    // const [uri, setURI] = useState('spotify:track:1zejeOnykpCoyVSit6Bwp3');\r\n\r\n    const handleSearch = (e) => {\r\n        const query = e.target.value;\r\n\r\n        if (!query) {\r\n            setQuery(query)\r\n            setSongs([])\r\n        } else {\r\n            setQuery(e.target.value)\r\n            setLoading(true)\r\n            getSearchDetails(query)\r\n        }\r\n    }\r\n\r\n    const playSearchSong = (uri) => {\r\n        const options = {\r\n            method: 'PUT',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({uris: uri})\r\n        }\r\n        fetch('/spotify/play-search', options)\r\n    }\r\n\r\n\r\n    async function getSearchDetails(query) {\r\n        await fetch(`/spotify/search-song?query=${query}`).then((response) => response.json()\r\n        ).then((data) => {\r\n            setSongs(data)\r\n        }).catch((error) => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            options={songs}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            getOptionLabel={option => option.name}\r\n            style={{width: 300}}\r\n            loading={loading}\r\n            onChange={(event, value) => {\r\n                // setURI(value.uri)\r\n                playSearchSong(value.uri)\r\n                setLoading(false)\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"Search Song\"\r\n                    variant=\"outlined\"\r\n                    onChange={handleSearch}\r\n                    value={query}\r\n                    InputProps={{\r\n                        ...params.InputProps,\r\n                        endAdornment: (\r\n                            <Fragment>\r\n                                {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\r\n                                {params.InputProps.endAdornment}\r\n                            </Fragment>\r\n                        ),\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}","import {useEffect, useState} from 'react';\r\nimport {Button, Grid, Typography} from '@material-ui/core';\r\nimport {Tune} from '@material-ui/icons';\r\nimport CreateRoomPage from \"./createroompage\";\r\nimport MusicPlayer from \"./musicplayer\";\r\nimport Search from \"./search\"\r\n\r\nfunction Room(props) {\r\n    const [votes_to_skip, setVotes] = useState(2)\r\n    const [guest_can_pause, setPause] = useState(false)\r\n    const [is_host, setHost] = useState(false)\r\n    const [showSettings, setSettings] = useState(false)\r\n    const [spotifyAuthenticated, setSpotifyAuthenticated] = useState(false)\r\n    const [song, setSong] = useState({})\r\n\r\n    const code = props.match.params.code;\r\n\r\n\r\n    useEffect(() => {\r\n        let interval = setInterval(getCurrentSong, 1000); //ComponentDidMount and  calling the function to get data stored in the variable\r\n        return () => {                                            //ComponentWillUnmount\r\n            clearInterval(interval)\r\n        }\r\n    }, [])\r\n\r\n    const getRoomDetails = () => {\r\n        fetch(\"/api/get-room\" + \"?code=\" + code)\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    props.leaveRoomCallback();\r\n                    props.history.push('/');\r\n                }\r\n\r\n                return response.json()\r\n            })\r\n            .then((data) => {\r\n                setVotes(data.votes_to_skip);\r\n                setPause(data.guest_can_pause);\r\n                setHost(data.is_host);\r\n\r\n                if (is_host) {\r\n                    authenticateSpotify();\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    const authenticateSpotify = () => {\r\n        fetch('/spotify/is-authenticated')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n            setSpotifyAuthenticated(data.status);\r\n            console.log(data.status);\r\n            if (!data.status) {\r\n                fetch('/spotify/get-auth-url')\r\n                    .then((response) => response.json())\r\n                    .then((data) => {\r\n                    window.location.replace(data.url); // Redirecting to spotify_callback()\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const getCurrentSong = () => {\r\n        fetch('/spotify/current-song').then((response) => {\r\n            if (!response.ok) {\r\n                return {};\r\n            } else {\r\n                return response.json();\r\n            }\r\n        }).then((data) => {\r\n            setSong(data);\r\n            console.log(data);\r\n        });\r\n    }\r\n\r\n    const leaveRoom = () => {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n        };\r\n        fetch('/api/leave-room', options).then((resp) => {\r\n            props.leaveRoomCallback()\r\n            props.history.push('/')\r\n        });\r\n    }\r\n\r\n    function settingsPage() {\r\n        return (\r\n            <Grid container spacing={1} align=\"center\">\r\n                <Grid item xs={12}>\r\n                    <CreateRoomPage update={true} guest_can_pause={guest_can_pause} votes_to_skip={votes_to_skip}\r\n                                    code={code} updateCallback={getRoomDetails}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Button color=\"secondary\" variant=\"contained\" aria-label=\"settings\" onClick={() => {\r\n                        settingsButtonClicked(false)\r\n                    }}>\r\n                        Close\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    function settingButton() {\r\n        return (\r\n            <Grid item xs={12} align=\"center\">\r\n                <Button color='primary' variant='contained' aria-label=\"settings\" startIcon={<Tune/>} onClick={() => {\r\n                    settingsButtonClicked(true)\r\n                }}>\r\n                    Settings\r\n                </Button>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    const settingsButtonClicked = (value) => {\r\n        setSettings(value);\r\n    };\r\n\r\n    getRoomDetails(); // calling the function to get data stored in the variable\r\n\r\n    if (showSettings) {\r\n        return settingsPage()\r\n    }\r\n    return (\r\n        <Grid container spacing={1} align=\"center\">\r\n            <Grid item xs={12} align=\"top\">\r\n                <Typography variant=\"h4\" component='h4'>\r\n                    Logged in as {is_host ? song.username: song.guest_name}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Search />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant=\"h4\" component='h4'>\r\n                    Code: {code}\r\n                </Typography>\r\n            </Grid>\r\n            <MusicPlayer time = {song.time} duration={song.duration} name = {song.username} votes={song.votes} votes_required={song.votes_required} song_title={song.title}\r\n                         is_playing={song.is_playing} image_url={song.image_url} artist={song.artist}/>\r\n            {is_host ? settingButton() : null}\r\n            <Grid item xs={12}>\r\n                <Button color='secondary' variant='contained' onClick={leaveRoom}>\r\n                    Leave Room\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Room;\r\n","import RoomJoinPage from './roomjoinpage';\r\nimport CreateRoomPage from './createroompage';\r\nimport Room from './room';\r\n\r\nimport {useEffect, useState} from \"react\";\r\nimport {BrowserRouter, Route, Switch, Redirect, Link} from \"react-router-dom\";\r\nimport {Grid, Button, ButtonGroup, Typography} from '@material-ui/core'\r\n\r\nfunction Homepage() {\r\n    const [room_code, codeSet] = useState(null)\r\n\r\n    useEffect( () => {\r\n        fetch('/api/user-in-room').then((response) => response.json()).then((data) => {\r\n            codeSet(data.code)\r\n        })\r\n    },[])\r\n\r\n    const clearRoomCode = () => {\r\n        codeSet(null)\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => {\r\n                    return room_code ? (<Redirect to={`/room/${room_code}`} /> ) : (renderHomePage());\r\n                }} />\r\n                <Route path=\"/join\" component={RoomJoinPage}/>\r\n                <Route path=\"/create\" component={CreateRoomPage}/>\r\n                <Route path=\"/room/:code\" render={(props) => {\r\n                    return <Room {...props} leaveRoomCallback={clearRoomCode}/>\r\n                }} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nfunction renderHomePage() {\r\n    return (\r\n        <Grid container spacing={3} align='center'>\r\n            <Grid item xs={12}>\r\n                <Typography variant='h3' component='h3'>\r\n                    House Party\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ButtonGroup disableElevation variant='contained' color='primary'>\r\n                    <Button color='primary' to='/join' component={Link}>\r\n                        Join a Room\r\n                    </Button>\r\n                    <Button color='secondary' to='/create' component={Link}>\r\n                        Create a Room\r\n                    </Button>\r\n                </ButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Homepage;","import './App.css';\nimport HomePage from './components/homepage'\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <HomePage/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}